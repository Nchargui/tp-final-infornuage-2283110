services:
  portainer:
    image: portainer/portainer-ce:alpine
    container_name: portainer
    restart: unless-stopped
    networks: 
        - cloud
    # ports:
    #   - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.portainer.rule=Host(`portainer.2283110.duckdns.org`)'
      - 'traefik.http.routers.portainer.entryPoints=websecure'

  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    networks: 
      - cloud
    # ports:
    #   - 8096:8096
    environment:
      - TZ=America/Montreal
    volumes:
      - jellyfin_data:/config
      - /mnt/media/Movies:/movies
      - /mnt/media/TV:/tv
    labels:
    - 'traefik.enable=true'
    - 'traefik.http.routers.jellyfin.rule=Host(`jellyfin.2283110.duckdns.org`)'
    - 'traefik.http.routers.jellyfin.entryPoints=websecure'

  backend:
    image: nadch4/tp-final-2283110-homebreeze-backend:v3
    build:
      context: ./tp-final-infornuage-2283110-backend
    container_name: backend
    ports:
      - "9696:9696"
    depends_on:
      mariadb:
        condition: service_healthy
    environment:
      - SPRING_APPLICATION_NAME=backend
      - SERVER_PORT=9696
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/home_breeze_bd
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=1234
    networks:
      - cloud
 
  mariadb:
    image: mariadb
    container_name: mariadb
    environment:
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=home_breeze_bd
    networks:
      - cloud
    volumes:
      - db:/data/db
      - ./db-seed:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
 
  frontend:
    image: nadch4/tp-final-2283110-homebreeze-frontend:v3
    container_name: homebreeze
    build:
      context: ./tp-final-infornuage-2283110-frontend
    # ports:
    #   - "80:80"
    depends_on:
      - backend
    networks:
      - cloud
    labels:
    - 'traefik.enable=true'
    - 'traefik.http.routers.homebreeze.rule=Host(`homebreeze.2283110.duckdns.org`)'
    - 'traefik.http.routers.homebreeze.entryPoints=websecure'

  proxy:
      image: traefik
      container_name: traefik
      restart: unless-stopped
      networks: 
          - cloud
      command:
        - "--log.level=DEBUG"
        - "--api.insecure=true"
        - "--providers.docker=true"
        - "--providers.docker.exposedbydefault=false"
        - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
        - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=duckdns"
        - "--certificatesresolvers.letsencrypt.acme.email=mail@mail.com"
        - "--certificatesresolvers.letsencrypt.acme.dnschallenge.disablePropagationCheck=true"
        - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
        - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
        - "--entrypoints.web.address=:80"
        - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
        - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
        - "--entrypoints.websecure.address=:443"
        - "--entrypoints.websecure.http.tls=true"
        - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
        - "--entrypoints.websecure.http.tls.domains[0].main=2283110.duckdns.org"
        - "--entrypoints.websecure.http.tls.domains[0].sans=*.2283110.duckdns.org"
      volumes:
        - "../data/traefik/letsencrypt:/letsencrypt"
        - "/var/run/docker.sock:/var/run/docker.sock:ro"
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.api.rule=Host(`2283110.duckdns.org`)'
        - 'traefik.http.routers.api.entryPoints=websecure'
        - 'traefik.http.routers.api.service=api@internal'
      ports:
        - "443:443"
        - "80:80"
      environment:
        - "DUCKDNS_TOKEN=91190d7c-ed46-46ff-8012-826010772251"
volumes:
  portainer_data:
  jellyfin_data:
  db:
 
networks:
  cloud:
    driver: bridge
